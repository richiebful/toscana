<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns="http://www.tei-c.org/ns/1.0"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Lega Toscana di Protezione ODD File</title>
        <author>Zachary Enick</author>
      </titleStmt>
      <publicationStmt>
        <authority>Prepared in TEI 5 by Zachary Enick for the Italian research assistantship at the
          University of Pittsburgh. Github repository <ref target="http://github.com/zme1/toscana"
          />. Date last worked on: <date when="2018-01-27"/></authority>
        <availability>
          <licence><!-- licence to go here --></licence>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Born digital.</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <schemaSpec ident="oddex1" start="teiCorpus">
        <moduleRef key="header"/>
        <moduleRef key="core"
          include="add address addrLine author bibl date del item lb list num p pb resp respStmt rs teiCorpus title unclear"/>
        <moduleRef key="tei"/>
        <moduleRef key="textstructure" include="TEI body closer signed text"/>
        <moduleRef key="corpus" except="activity locale particDesc"/>
        <moduleRef key="linking" include="ab seg"/>
        <moduleRef key="msdescription"
          include="accMat acquisition handDesc history institution msDesc msIdentifier msName origin physDesc repository"/>
        <moduleRef key="namesdates" include="orgName persName roleName surname"/>
      </schemaSpec>
      <elementSpec ident="seg" mode="change" module="linking">
        <attList>
          <attDef ident="type" mode="replace" usage="req">
            <valList type="closed">
              <valItem ident="proposal"/>
              <valItem ident="invite"/>
              <valItem ident="delegation"/>
              <valItem ident="comp"/>
            </valList>
          </attDef>
          <attDef ident="subtype" mode="replace" usage="opt">
            <valList type="closed">
              <valItem ident="task"/>
              <valItem ident="committee"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="persName" mode="change" module="namesdates">
        <constraintSpec ident="persName_surname" scheme="isoschematron">
          <constraint>
            <sch:rule xmlns:sch="http://purl.oclc.org/dsdl/schematron" context="tei:persName">
              <sch:assert test="./child::tei:surname">Every persName element must have a child
                surname element</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <!-- I can't figure out how to write correct schematron rules... -->
        <attList>
          <attDef ident="ref" mode="replace" usage="req">
            <valList type="closed">
              <valItem ident="#enickz"/>
              <valItem ident="#insanal"/>
              <valItem ident="#jermyne"/>
              <valItem ident="#keilr"/>
              <valItem ident="#millarj"/>
              <valItem ident="#bondare"/>
              <valItem ident="#vondasl"/>
              <valItem ident="#ms"/>
              <valItem ident="#ap"/>
              <valItem ident="#mf"/>
              <valItem ident="#sm"/>
              <valItem ident="#ml"/>
              <valItem ident="#lb"/>
              <valItem ident="#mp"/>
              <valItem ident="#ed"/>
              <valItem ident="#al"/>
              <valItem ident="#cs"/>
              <valItem ident="#ep"/>
              <valItem ident="#am"/>
              <valItem ident="#cr"/>
              <valItem ident="#ll"/>
              <valItem ident="#pb"/>
              <valItem ident="#gr"/>
              <valItem ident="#em"/>
              <valItem ident="#cg"/>
              <valItem ident="#ld"/>
              <valItem ident="#sd"/>
              <valItem ident="#gf"/>
              <valItem ident="#sp"/>
              <valItem ident="unknown"/>
              <!-- I am yet to figure out one @ref value for a brother with a shared last name -->
              <valItem ident="#cp"/>
              <valItem ident="#af"/>
              <valItem ident="#cp"/>
              <valItem ident="#lv"/>
              <valItem ident="#mz"/>
              <valItem ident="#lv"/>
              <valItem ident="#vd"/>
              <valItem ident="#es"/>
              <valItem ident="#rr"/>
              <valItem ident="#lt"/>
              <valItem ident="#op"/>
              <valItem ident="#fb"/>
              <valItem ident="#ss"/>
              <valItem ident="#eb"/>
              <valItem ident="#cc"/>
              <valItem ident="#gt"/>
              <valItem ident="#os"/>
              <valItem ident="#up"/>
              <valItem ident="#fg"/>
              <valItem ident="#vb"/>
              <valItem ident="#js"/>
            </valList>
          </attDef>
          <attDef ident="role" mode="replace" usage="rec">
            <valList type="closed">
              <valItem ident="source"/>
              <valItem ident="target"/>
              <valItem ident="proposer"/>
              <valItem ident="supporter"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="num" mode="change" module="core">
        <attList>
          <attDef ident="type" mode="replace" usage="req">
            <valList type="closed">
              <valItem ident="monetary"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="rs" mode="change" module="core">
        <attList>
          <attDef ident="role" mode="replace" usage="rec">
            <valList type="closed">
              <valItem ident="source"/>
              <valItem ident="target"/>
              <valItem ident="proposer"/>
              <valItem ident="supporter"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="ab" mode="change" module="linking">
        <content>
          <alternate maxOccurs="unbounded" minOccurs="0">
            <textNode/>
            <elementRef key="closer"/>
            <elementRef key="persName"/>
            <elementRef key="lb"/>
            <elementRef key="pb"/>
            <elementRef key="seg"/>
            <elementRef key="del"/>
            <elementRef key="rs"/>
            <elementRef key="add"/>
            <elementRef key="orgName"/>
            <elementRef key="roleName"/>
            <elementRef key="unclear"/>
            <elementRef key="list"/>
          </alternate>
        </content>
      </elementSpec>
      <elementSpec ident="list" mode="change" module="core">
        <attList>
          <attDef ident="type" mode="replace" usage="rec">
            <valList type="closed">
              <valItem ident="committee"/>
              <valItem ident="officers"/>
            </valList>
          </attDef>
          <attDef ident="subtype" mode="replace" usage="rec">
            <valList type="closed">
              <valItem ident="festaCampestre"/>
              <valItem ident="ballo"/>
              <valItem ident="fondoM"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="orgName" mode="change" module="namesdates">
        <attList>
          <attDef ident="ref" mode="replace" usage="req">
            <valList type="closed">
              <valItem ident="#pittText"/>
              <valItem ident="#praxis"/>
              <valItem ident="#hhc"/>
              <valItem ident="#legaT"/>
              <valItem ident="#figli"/>
              <valItem ident="#msgm"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>

      <!-- I need schematron rules to ensure that every persName element has a child surname element, and that every seg element with the
       @type proposal has at least one child persName element with a @role attribute.-->

      <!-- Have not determined proper Schematron documentation as of yet. -->

    </body>
  </text>
</TEI>
